<#@ template hostspecific="true" language="C#" debug="true" #>
<#@ output extension=".ttlog" #>
<#@ include file="TemplateFilemanager.CS.ttinclude" #>
<#@ include file="AssemblyInfoHelper.CS.ttinclude" #>
<#

DateTime now = DateTime.Now;
DateTime buildTimeStamp = DateTimeRound(now);

String nowStr = now.ToString("yyyy-MM-dd HH:mm:ss");
String buildTimeStampStr = buildTimeStamp.ToString("yyyy-MM-dd HH:mm:ss");
String todayStr = buildTimeStamp.ToString("yyyy-MM-dd");
String thisYearStr = buildTimeStamp.ToString("yyyy");

TimeSpan timeSince_2000_01_01 = TimeSince_2000_01_01(buildTimeStamp);
int buildNo = timeSince_2000_01_01.Days;
int revisionNo = (int)(buildTimeStamp.TimeOfDay.TotalSeconds/2);
 
string filePath = this.Host.TemplateFile;
string fileName = Path.GetFileName(filePath);
string autoGeneratedFileHeader_CS = GetAutoGeneratedFileHeader("C#", fileName, nowStr);
string autoGeneratedFileHeader_XML = GetAutoGeneratedFileHeader("XML", fileName, nowStr);

string developerName = "Kilo Bravo";

int productVersionMajorNo = 3;
int productVersionMinorNo = 0;

string major = GetVariableStrInt("PRODUCT_VERSION_MAJOR", productVersionMajorNo);
string minor = GetVariableStrInt("PRODUCT_VERSION_MINOR", productVersionMinorNo);

string build = GetVariableStrInt("BUILD_NUMBER", buildNo);
string revision = GetVariableStrInt("REVISION", revisionNo);

string productVersionShort =  major+"."+minor;
string productVersionFull =  major+"."+minor+"."+build+"."+revision;

string productCopyright = "Copyright © 2010-"+thisYearStr+" "+developerName;
string productName = "PhysicalMeasure";
string productDescription = "Physical Unit System Framework. PhysicalMeasure is a C# library for handling physical quantities by specifying value and unit. Scaling of units and conversions between multiple unit systems are supported.";



// PhysicalMeasure Assembly

string assemblyTitle = "PhysicalMeasure";
string assemblyDescription = productDescription;


var fileTemplateManager = TemplateFileManager.Create(this);
fileTemplateManager.StartNewFile("AssemblyInfo.cs"); 

#>
<#=autoGeneratedFileHeader_CS#>

using System;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
[assembly: AssemblyTitle("<#=assemblyTitle#>")]
[assembly: AssemblyDescription("<#=assemblyDescription#>")]

#if DEBUG
[assembly: AssemblyConfiguration("Debug")]
#else
// [assembly: AssemblyConfiguration("Release")]
#endif

[assembly: AssemblyCompany("<#=developerName#>")]
[assembly: AssemblyProduct("<#=productName#>")]
[assembly: AssemblyCopyright("<#=productCopyright#>")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]

// Setting ComVisible to false makes the types in this assembly not visible 
// to COM components.  If you need to access a type in this assembly from 
// COM, set the ComVisible attribute to true on that type.
[assembly: ComVisible(false)]

[assembly: CLSCompliant(false)]

// The following GUID is for the ID of the typelib if this project is exposed to COM
[assembly: Guid("c12e9e3a-4f77-4b3b-9175-5f30dbb00be9")]

//  Build at  <#=nowStr#> <#=buildTimeStampStr#>
//  major:    <#=major#>
//  minor:    <#=minor#>
//  build:    <#=build#>
//  revision: <#=revision#>

[assembly: AssemblyVersion("<#=productVersionShort#>")]
[assembly: AssemblyFileVersion("<#=productVersionFull#>")]
[assembly: AssemblyInformationalVersion("<#=productVersionFull#>")]


[assembly: InternalsVisibleTo("PhysCalculatorTests")]
<#
assemblyTitle = "PhysCalc";
assemblyDescription = "Physical quantity calculator using PhysicalMeasure";

fileTemplateManager.StartNewFile("AssemblyInfo.cs", "PhysCalc", "Properties"); 
#>
<#=autoGeneratedFileHeader_CS#>

using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
[assembly: AssemblyTitle("<#=assemblyTitle#>")]
[assembly: AssemblyDescription("<#=assemblyDescription#>")]
 
#if DEBUG
[assembly: AssemblyConfiguration("Debug")]
#else
// [assembly: AssemblyConfiguration("Release")]
#endif

[assembly: AssemblyCompany("<#=developerName#>")]
[assembly: AssemblyProduct("<#=productName#>")]
[assembly: AssemblyCopyright("<#=productCopyright#>")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]

// Setting ComVisible to false makes the types in this assembly not visible 
// to COM components.  If you need to access a type in this assembly from 
// COM, set the ComVisible attribute to true on that type.
[assembly: ComVisible(false)]

// The following GUID is for the ID of the typelib if this project is exposed to COM
[assembly: Guid("9e19d828-26ef-460d-8d72-a0f3c9b675f4")]

//  Build at  <#=nowStr#> <#=buildTimeStampStr#>
//  major:    <#=major#>
//  minor:    <#=minor#>
//  build:    <#=build#>
//  revision: <#=revision#>

[assembly: AssemblyVersion("<#=productVersionShort#>")]
[assembly: AssemblyFileVersion("<#=productVersionFull#>")]
[assembly: AssemblyInformationalVersion("<#=productVersionFull#>")]


[assembly: InternalsVisibleTo("PhysCalculatorTests")]
<#
assemblyTitle = "KBL.Extensions";
assemblyDescription = "Class extension methods for Double, IEnumerable, Array, String, DateTime, Assembly";

fileTemplateManager.StartNewFile("AssemblyInfo.cs", "KBL.Extensions", "Properties"); 

int KBLExtensionsVersionMajorNo = 1;
int KBLExtensionsVersionMinorNo = 0;

string KBLExtensionsCopyright = "Copyright © 2015-"+thisYearStr+" "+developerName;

string KBLExtensionsVersionMajor = GetVariableStrInt("KBLEXTENSIONS_VERSION_MAJOR", KBLExtensionsVersionMajorNo);
string KBLExtensionsVersionMinor = GetVariableStrInt("KBLEXTENSIONS_VERSION_MINOR", KBLExtensionsVersionMinorNo);

string KBLExtensionsVersionShort =  KBLExtensionsVersionMajor+"."+KBLExtensionsVersionMinor;
string KBLExtensionsVersionFull =  KBLExtensionsVersionMajor+"."+KBLExtensionsVersionMinor+"."+build+"."+revision;


#>
<#=autoGeneratedFileHeader_CS#>

using System.Reflection;
using System.Runtime.InteropServices;

// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
[assembly: AssemblyTitle("<#=assemblyTitle#>")]
[assembly: AssemblyDescription("<#=assemblyDescription#>")]

#if DEBUG
[assembly: AssemblyConfiguration("Debug")]
#else
// [assembly: AssemblyConfiguration("Release")]
#endif

[assembly: AssemblyCompany("<#=developerName#>")]
[assembly: AssemblyProduct("<#=productName#>")]
[assembly: AssemblyCopyright("<#=KBLExtensionsCopyright#>")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]


// Setting ComVisible to false makes the types in this assembly not visible 
// to COM components.  If you need to access a type in this assembly from 
// COM, set the ComVisible attribute to true on that type.
[assembly: ComVisible(false)]

// The following GUID is for the ID of the typelib if this project is exposed to COM
[assembly: Guid("7139b888-5ce1-4604-b2e8-19fd45bc8b0e")]

//  Build at  <#=nowStr#> <#=buildTimeStampStr#>
//  major:    <#=KBLExtensionsVersionMajor#>
//  minor:    <#=KBLExtensionsVersionMinor#>
//  build:    <#=build#>
//  revision: <#=revision#>

[assembly: AssemblyVersion("<#=KBLExtensionsVersionShort#>")]
[assembly: AssemblyFileVersion("<#=KBLExtensionsVersionFull#>")]
[assembly: AssemblyInformationalVersion("<#=KBLExtensionsVersionFull#>")]


<#
fileTemplateManager.StartNewFile("PhysicalMeasure.nuspec", "PhysicalMeasure", "Nuget files"); 
#><?xml version="1.0"?>
<#=autoGeneratedFileHeader_XML#>
<package >
  <metadata>
    <id><#=productName#></id>
    <version><#=productVersionFull#></version>
    <title><#=productName#></title>
    <authors><#=developerName#></authors>
    <owners><#=developerName#></owners>

    <licenseUrl>http://physicalmeasure.codeplex.com/license</licenseUrl>
    <projectUrl>http://physicalmeasure.codeplex.com/</projectUrl>
    <iconUrl>http://download-codeplex.sec.s-msft.com/Download/SourceControlFileDownload.ashx?ProjectName=physicalmeasure&amp;changeSetId=40664&amp;itemId=707533</iconUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description><#=productDescription#></description>

    <!-- 
        Build at <#=nowStr#> <#=buildTimeStampStr#>
        major: <#=major#> 
        minor: <#=minor#> 
        build: <#=build#> 
        revision: <#=revision#> 
    -->
    <releaseNotes><#=todayStr#> Release of <#=productName#> <#=productVersionFull#>.</releaseNotes>
    <copyright><#=productCopyright#></copyright>
    <tags>Physical measure quantity unit SI system conversion physics engineering</tags>
    <frameworkAssemblies>
      <frameworkAssembly assemblyName="System" targetFramework=".NETFramework4.6" />
    </frameworkAssemblies>
  </metadata>
  <files>
    <!-- <file src="bin\$configuration$\PhysicalMeasure.dll" target="lib\net46\PhysicalMeasure.dll" />  -->
    <file src="bin\$configuration$\KBL.Extensions.dll" target="lib\net46\KBL.Extensions.dll" />
  </files>
</package>
<#
productName = "PhysicalMeasure.Sample";

fileTemplateManager.StartNewFile("PhysicalMeasure.Sample.nuspec", "PhysicalMeasure", "Nuget files");
#><?xml version="1.0"?>
<#=autoGeneratedFileHeader_XML#>
<package >
  <metadata>
    <id><#=productName#></id>
    <version><#=productVersionFull#></version>
    <title><#=productName#></title>
    <authors><#=developerName#></authors>
    <owners><#=developerName#></owners>
    <licenseUrl>http://physicalmeasure.codeplex.com/license</licenseUrl>
    <projectUrl>http://physicalmeasure.codeplex.com/</projectUrl>
    <iconUrl>http://download-codeplex.sec.s-msft.com/Download/SourceControlFileDownload.ashx?ProjectName=physicalmeasure&amp;changeSetId=40664&amp;itemId=707533</iconUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description><#=productDescription#></description>

     <!-- 
        Build at <#=nowStr#> <#=buildTimeStampStr#>
        major: <#=major#> 
        minor: <#=minor#> 
        build: <#=build#> 
        revision: <#=revision#> 
     -->
    <releaseNotes><#=todayStr#> Release of <#=productName#> <#=productVersionFull#>.</releaseNotes>
    <copyright><#=productCopyright#></copyright>
    <tags>Physical measure quantity unit SI system conversion physics engineering</tags>
    <frameworkAssemblies>
      <frameworkAssembly assemblyName="System" targetFramework=".NETFramework4.6" />
    </frameworkAssemblies>
  </metadata>
  <files>
    <file src="..\PhysicalMeasureTest\PhysicalMeasureExamples.cs" target="content\Samples\PhysicalMeasure\Examples.cs" />
  </files>
</package> 
<#
fileTemplateManager.Process(); 
#>